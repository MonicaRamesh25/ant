/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sbi.wms.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sbi.wms.model.WMS_INB_BRANCH_MASTER;
import com.sbi.wms.model.WMS_INB_BRANCH_MASTERModel;
import com.sbi.wms.model.WMS_INB_BRANCH_MASTERSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the WMS_INB_BRANCH_MASTER service. Represents a row in the &quot;SBI_WMS_INB_BRANCH_MASTER&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sbi.wms.model.WMS_INB_BRANCH_MASTERModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link WMS_INB_BRANCH_MASTERImpl}.
 * </p>
 *
 * @author Syed
 * @see WMS_INB_BRANCH_MASTERImpl
 * @see com.sbi.wms.model.WMS_INB_BRANCH_MASTER
 * @see com.sbi.wms.model.WMS_INB_BRANCH_MASTERModel
 * @generated
 */
@JSON(strict = true)
public class WMS_INB_BRANCH_MASTERModelImpl extends BaseModelImpl<WMS_INB_BRANCH_MASTER>
	implements WMS_INB_BRANCH_MASTERModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a w m s_ i n b_ b r a n c h_ m a s t e r model instance should use the {@link com.sbi.wms.model.WMS_INB_BRANCH_MASTER} interface instead.
	 */
	public static final String TABLE_NAME = "SBI_WMS_INB_BRANCH_MASTER";
	public static final Object[][] TABLE_COLUMNS = {
			{ "REC_ID", Types.BIGINT },
			{ "BRANCH_CODE", Types.VARCHAR },
			{ "BRANCH_NAME", Types.VARCHAR },
			{ "MAIL_ADDRESS1", Types.VARCHAR },
			{ "MAIL_ADDRESS2", Types.VARCHAR },
			{ "MAIL_ADDRESS3", Types.VARCHAR },
			{ "CITY", Types.VARCHAR },
			{ "DISTRICT", Types.VARCHAR },
			{ "STATE", Types.VARCHAR },
			{ "PIN", Types.VARCHAR },
			{ "CIRCLE", Types.VARCHAR },
			{ "FOREX_TYPE", Types.VARCHAR },
			{ "BRANCH_MANAGER", Types.VARCHAR },
			{ "NO_OF_ATM", Types.VARCHAR },
			{ "IFSC_CODE", Types.VARCHAR },
			{ "STD_CODE", Types.VARCHAR },
			{ "TELEPHONE", Types.VARCHAR },
			{ "FAX_NO", Types.VARCHAR },
			{ "EMAIL_ID", Types.VARCHAR },
			{ "BUSSINESS_HOURS", Types.VARCHAR },
			{ "WEEKLY_HOLIDAY", Types.VARCHAR },
			{ "NON_BANKING_DAY", Types.VARCHAR },
			{ "SUNDAY_BANKING", Types.VARCHAR },
			{ "SUNDAY_BANKING_BUSSINESS", Types.VARCHAR },
			{ "SWIFT_ENABLED", Types.VARCHAR },
			{ "SWIFT_CODE", Types.VARCHAR },
			{ "BRANCH_TYPE", Types.VARCHAR },
			{ "LOCKER", Types.VARCHAR },
			{ "GOLD_COIN", Types.VARCHAR },
			{ "LAST_MOD_TIME", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table SBI_WMS_INB_BRANCH_MASTER (REC_ID LONG not null primary key,BRANCH_CODE VARCHAR(75) null,BRANCH_NAME VARCHAR(75) null,MAIL_ADDRESS1 VARCHAR(75) null,MAIL_ADDRESS2 VARCHAR(75) null,MAIL_ADDRESS3 VARCHAR(75) null,CITY VARCHAR(75) null,DISTRICT VARCHAR(75) null,STATE VARCHAR(75) null,PIN VARCHAR(75) null,CIRCLE VARCHAR(75) null,FOREX_TYPE VARCHAR(75) null,BRANCH_MANAGER VARCHAR(75) null,NO_OF_ATM VARCHAR(75) null,IFSC_CODE VARCHAR(75) null,STD_CODE VARCHAR(75) null,TELEPHONE VARCHAR(75) null,FAX_NO VARCHAR(75) null,EMAIL_ID VARCHAR(75) null,BUSSINESS_HOURS VARCHAR(75) null,WEEKLY_HOLIDAY VARCHAR(75) null,NON_BANKING_DAY VARCHAR(75) null,SUNDAY_BANKING VARCHAR(75) null,SUNDAY_BANKING_BUSSINESS VARCHAR(75) null,SWIFT_ENABLED VARCHAR(75) null,SWIFT_CODE VARCHAR(75) null,BRANCH_TYPE VARCHAR(75) null,LOCKER VARCHAR(75) null,GOLD_COIN VARCHAR(75) null,LAST_MOD_TIME DATE null)";
	public static final String TABLE_SQL_DROP = "drop table SBI_WMS_INB_BRANCH_MASTER";
	public static final String ORDER_BY_JPQL = " ORDER BY wms_inb_branch_master.REC_ID ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SBI_WMS_INB_BRANCH_MASTER.REC_ID ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sbi.wms.model.WMS_INB_BRANCH_MASTER"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sbi.wms.model.WMS_INB_BRANCH_MASTER"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static WMS_INB_BRANCH_MASTER toModel(
		WMS_INB_BRANCH_MASTERSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		WMS_INB_BRANCH_MASTER model = new WMS_INB_BRANCH_MASTERImpl();

		model.setREC_ID(soapModel.getREC_ID());
		model.setBRANCH_CODE(soapModel.getBRANCH_CODE());
		model.setBRANCH_NAME(soapModel.getBRANCH_NAME());
		model.setMAIL_ADDRESS1(soapModel.getMAIL_ADDRESS1());
		model.setMAIL_ADDRESS2(soapModel.getMAIL_ADDRESS2());
		model.setMAIL_ADDRESS3(soapModel.getMAIL_ADDRESS3());
		model.setCITY(soapModel.getCITY());
		model.setDISTRICT(soapModel.getDISTRICT());
		model.setSTATE(soapModel.getSTATE());
		model.setPIN(soapModel.getPIN());
		model.setCIRCLE(soapModel.getCIRCLE());
		model.setFOREX_TYPE(soapModel.getFOREX_TYPE());
		model.setBRANCH_MANAGER(soapModel.getBRANCH_MANAGER());
		model.setNO_OF_ATM(soapModel.getNO_OF_ATM());
		model.setIFSC_CODE(soapModel.getIFSC_CODE());
		model.setSTD_CODE(soapModel.getSTD_CODE());
		model.setTELEPHONE(soapModel.getTELEPHONE());
		model.setFAX_NO(soapModel.getFAX_NO());
		model.setEMAIL_ID(soapModel.getEMAIL_ID());
		model.setBUSSINESS_HOURS(soapModel.getBUSSINESS_HOURS());
		model.setWEEKLY_HOLIDAY(soapModel.getWEEKLY_HOLIDAY());
		model.setNON_BANKING_DAY(soapModel.getNON_BANKING_DAY());
		model.setSUNDAY_BANKING(soapModel.getSUNDAY_BANKING());
		model.setSUNDAY_BANKING_BUSSINESS(soapModel.getSUNDAY_BANKING_BUSSINESS());
		model.setSWIFT_ENABLED(soapModel.getSWIFT_ENABLED());
		model.setSWIFT_CODE(soapModel.getSWIFT_CODE());
		model.setBRANCH_TYPE(soapModel.getBRANCH_TYPE());
		model.setLOCKER(soapModel.getLOCKER());
		model.setGOLD_COIN(soapModel.getGOLD_COIN());
		model.setLAST_MOD_TIME(soapModel.getLAST_MOD_TIME());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<WMS_INB_BRANCH_MASTER> toModels(
		WMS_INB_BRANCH_MASTERSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<WMS_INB_BRANCH_MASTER> models = new ArrayList<WMS_INB_BRANCH_MASTER>(soapModels.length);

		for (WMS_INB_BRANCH_MASTERSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sbi.wms.model.WMS_INB_BRANCH_MASTER"));

	public WMS_INB_BRANCH_MASTERModelImpl() {
	}

	public long getPrimaryKey() {
		return _REC_ID;
	}

	public void setPrimaryKey(long primaryKey) {
		setREC_ID(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_REC_ID);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return WMS_INB_BRANCH_MASTER.class;
	}

	public String getModelClassName() {
		return WMS_INB_BRANCH_MASTER.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("REC_ID", getREC_ID());
		attributes.put("BRANCH_CODE", getBRANCH_CODE());
		attributes.put("BRANCH_NAME", getBRANCH_NAME());
		attributes.put("MAIL_ADDRESS1", getMAIL_ADDRESS1());
		attributes.put("MAIL_ADDRESS2", getMAIL_ADDRESS2());
		attributes.put("MAIL_ADDRESS3", getMAIL_ADDRESS3());
		attributes.put("CITY", getCITY());
		attributes.put("DISTRICT", getDISTRICT());
		attributes.put("STATE", getSTATE());
		attributes.put("PIN", getPIN());
		attributes.put("CIRCLE", getCIRCLE());
		attributes.put("FOREX_TYPE", getFOREX_TYPE());
		attributes.put("BRANCH_MANAGER", getBRANCH_MANAGER());
		attributes.put("NO_OF_ATM", getNO_OF_ATM());
		attributes.put("IFSC_CODE", getIFSC_CODE());
		attributes.put("STD_CODE", getSTD_CODE());
		attributes.put("TELEPHONE", getTELEPHONE());
		attributes.put("FAX_NO", getFAX_NO());
		attributes.put("EMAIL_ID", getEMAIL_ID());
		attributes.put("BUSSINESS_HOURS", getBUSSINESS_HOURS());
		attributes.put("WEEKLY_HOLIDAY", getWEEKLY_HOLIDAY());
		attributes.put("NON_BANKING_DAY", getNON_BANKING_DAY());
		attributes.put("SUNDAY_BANKING", getSUNDAY_BANKING());
		attributes.put("SUNDAY_BANKING_BUSSINESS", getSUNDAY_BANKING_BUSSINESS());
		attributes.put("SWIFT_ENABLED", getSWIFT_ENABLED());
		attributes.put("SWIFT_CODE", getSWIFT_CODE());
		attributes.put("BRANCH_TYPE", getBRANCH_TYPE());
		attributes.put("LOCKER", getLOCKER());
		attributes.put("GOLD_COIN", getGOLD_COIN());
		attributes.put("LAST_MOD_TIME", getLAST_MOD_TIME());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long REC_ID = (Long)attributes.get("REC_ID");

		if (REC_ID != null) {
			setREC_ID(REC_ID);
		}

		String BRANCH_CODE = (String)attributes.get("BRANCH_CODE");

		if (BRANCH_CODE != null) {
			setBRANCH_CODE(BRANCH_CODE);
		}

		String BRANCH_NAME = (String)attributes.get("BRANCH_NAME");

		if (BRANCH_NAME != null) {
			setBRANCH_NAME(BRANCH_NAME);
		}

		String MAIL_ADDRESS1 = (String)attributes.get("MAIL_ADDRESS1");

		if (MAIL_ADDRESS1 != null) {
			setMAIL_ADDRESS1(MAIL_ADDRESS1);
		}

		String MAIL_ADDRESS2 = (String)attributes.get("MAIL_ADDRESS2");

		if (MAIL_ADDRESS2 != null) {
			setMAIL_ADDRESS2(MAIL_ADDRESS2);
		}

		String MAIL_ADDRESS3 = (String)attributes.get("MAIL_ADDRESS3");

		if (MAIL_ADDRESS3 != null) {
			setMAIL_ADDRESS3(MAIL_ADDRESS3);
		}

		String CITY = (String)attributes.get("CITY");

		if (CITY != null) {
			setCITY(CITY);
		}

		String DISTRICT = (String)attributes.get("DISTRICT");

		if (DISTRICT != null) {
			setDISTRICT(DISTRICT);
		}

		String STATE = (String)attributes.get("STATE");

		if (STATE != null) {
			setSTATE(STATE);
		}

		String PIN = (String)attributes.get("PIN");

		if (PIN != null) {
			setPIN(PIN);
		}

		String CIRCLE = (String)attributes.get("CIRCLE");

		if (CIRCLE != null) {
			setCIRCLE(CIRCLE);
		}

		String FOREX_TYPE = (String)attributes.get("FOREX_TYPE");

		if (FOREX_TYPE != null) {
			setFOREX_TYPE(FOREX_TYPE);
		}

		String BRANCH_MANAGER = (String)attributes.get("BRANCH_MANAGER");

		if (BRANCH_MANAGER != null) {
			setBRANCH_MANAGER(BRANCH_MANAGER);
		}

		String NO_OF_ATM = (String)attributes.get("NO_OF_ATM");

		if (NO_OF_ATM != null) {
			setNO_OF_ATM(NO_OF_ATM);
		}

		String IFSC_CODE = (String)attributes.get("IFSC_CODE");

		if (IFSC_CODE != null) {
			setIFSC_CODE(IFSC_CODE);
		}

		String STD_CODE = (String)attributes.get("STD_CODE");

		if (STD_CODE != null) {
			setSTD_CODE(STD_CODE);
		}

		String TELEPHONE = (String)attributes.get("TELEPHONE");

		if (TELEPHONE != null) {
			setTELEPHONE(TELEPHONE);
		}

		String FAX_NO = (String)attributes.get("FAX_NO");

		if (FAX_NO != null) {
			setFAX_NO(FAX_NO);
		}

		String EMAIL_ID = (String)attributes.get("EMAIL_ID");

		if (EMAIL_ID != null) {
			setEMAIL_ID(EMAIL_ID);
		}

		String BUSSINESS_HOURS = (String)attributes.get("BUSSINESS_HOURS");

		if (BUSSINESS_HOURS != null) {
			setBUSSINESS_HOURS(BUSSINESS_HOURS);
		}

		String WEEKLY_HOLIDAY = (String)attributes.get("WEEKLY_HOLIDAY");

		if (WEEKLY_HOLIDAY != null) {
			setWEEKLY_HOLIDAY(WEEKLY_HOLIDAY);
		}

		String NON_BANKING_DAY = (String)attributes.get("NON_BANKING_DAY");

		if (NON_BANKING_DAY != null) {
			setNON_BANKING_DAY(NON_BANKING_DAY);
		}

		String SUNDAY_BANKING = (String)attributes.get("SUNDAY_BANKING");

		if (SUNDAY_BANKING != null) {
			setSUNDAY_BANKING(SUNDAY_BANKING);
		}

		String SUNDAY_BANKING_BUSSINESS = (String)attributes.get(
				"SUNDAY_BANKING_BUSSINESS");

		if (SUNDAY_BANKING_BUSSINESS != null) {
			setSUNDAY_BANKING_BUSSINESS(SUNDAY_BANKING_BUSSINESS);
		}

		String SWIFT_ENABLED = (String)attributes.get("SWIFT_ENABLED");

		if (SWIFT_ENABLED != null) {
			setSWIFT_ENABLED(SWIFT_ENABLED);
		}

		String SWIFT_CODE = (String)attributes.get("SWIFT_CODE");

		if (SWIFT_CODE != null) {
			setSWIFT_CODE(SWIFT_CODE);
		}

		String BRANCH_TYPE = (String)attributes.get("BRANCH_TYPE");

		if (BRANCH_TYPE != null) {
			setBRANCH_TYPE(BRANCH_TYPE);
		}

		String LOCKER = (String)attributes.get("LOCKER");

		if (LOCKER != null) {
			setLOCKER(LOCKER);
		}

		String GOLD_COIN = (String)attributes.get("GOLD_COIN");

		if (GOLD_COIN != null) {
			setGOLD_COIN(GOLD_COIN);
		}

		Date LAST_MOD_TIME = (Date)attributes.get("LAST_MOD_TIME");

		if (LAST_MOD_TIME != null) {
			setLAST_MOD_TIME(LAST_MOD_TIME);
		}
	}

	@JSON
	public long getREC_ID() {
		return _REC_ID;
	}

	public void setREC_ID(long REC_ID) {
		_REC_ID = REC_ID;
	}

	@JSON
	public String getBRANCH_CODE() {
		if (_BRANCH_CODE == null) {
			return StringPool.BLANK;
		}
		else {
			return _BRANCH_CODE;
		}
	}

	public void setBRANCH_CODE(String BRANCH_CODE) {
		_BRANCH_CODE = BRANCH_CODE;
	}

	@JSON
	public String getBRANCH_NAME() {
		if (_BRANCH_NAME == null) {
			return StringPool.BLANK;
		}
		else {
			return _BRANCH_NAME;
		}
	}

	public void setBRANCH_NAME(String BRANCH_NAME) {
		_BRANCH_NAME = BRANCH_NAME;
	}

	@JSON
	public String getMAIL_ADDRESS1() {
		if (_MAIL_ADDRESS1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _MAIL_ADDRESS1;
		}
	}

	public void setMAIL_ADDRESS1(String MAIL_ADDRESS1) {
		_MAIL_ADDRESS1 = MAIL_ADDRESS1;
	}

	@JSON
	public String getMAIL_ADDRESS2() {
		if (_MAIL_ADDRESS2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _MAIL_ADDRESS2;
		}
	}

	public void setMAIL_ADDRESS2(String MAIL_ADDRESS2) {
		_MAIL_ADDRESS2 = MAIL_ADDRESS2;
	}

	@JSON
	public String getMAIL_ADDRESS3() {
		if (_MAIL_ADDRESS3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _MAIL_ADDRESS3;
		}
	}

	public void setMAIL_ADDRESS3(String MAIL_ADDRESS3) {
		_MAIL_ADDRESS3 = MAIL_ADDRESS3;
	}

	@JSON
	public String getCITY() {
		if (_CITY == null) {
			return StringPool.BLANK;
		}
		else {
			return _CITY;
		}
	}

	public void setCITY(String CITY) {
		_CITY = CITY;
	}

	@JSON
	public String getDISTRICT() {
		if (_DISTRICT == null) {
			return StringPool.BLANK;
		}
		else {
			return _DISTRICT;
		}
	}

	public void setDISTRICT(String DISTRICT) {
		_DISTRICT = DISTRICT;
	}

	@JSON
	public String getSTATE() {
		if (_STATE == null) {
			return StringPool.BLANK;
		}
		else {
			return _STATE;
		}
	}

	public void setSTATE(String STATE) {
		_STATE = STATE;
	}

	@JSON
	public String getPIN() {
		if (_PIN == null) {
			return StringPool.BLANK;
		}
		else {
			return _PIN;
		}
	}

	public void setPIN(String PIN) {
		_PIN = PIN;
	}

	@JSON
	public String getCIRCLE() {
		if (_CIRCLE == null) {
			return StringPool.BLANK;
		}
		else {
			return _CIRCLE;
		}
	}

	public void setCIRCLE(String CIRCLE) {
		_CIRCLE = CIRCLE;
	}

	@JSON
	public String getFOREX_TYPE() {
		if (_FOREX_TYPE == null) {
			return StringPool.BLANK;
		}
		else {
			return _FOREX_TYPE;
		}
	}

	public void setFOREX_TYPE(String FOREX_TYPE) {
		_FOREX_TYPE = FOREX_TYPE;
	}

	@JSON
	public String getBRANCH_MANAGER() {
		if (_BRANCH_MANAGER == null) {
			return StringPool.BLANK;
		}
		else {
			return _BRANCH_MANAGER;
		}
	}

	public void setBRANCH_MANAGER(String BRANCH_MANAGER) {
		_BRANCH_MANAGER = BRANCH_MANAGER;
	}

	@JSON
	public String getNO_OF_ATM() {
		if (_NO_OF_ATM == null) {
			return StringPool.BLANK;
		}
		else {
			return _NO_OF_ATM;
		}
	}

	public void setNO_OF_ATM(String NO_OF_ATM) {
		_NO_OF_ATM = NO_OF_ATM;
	}

	@JSON
	public String getIFSC_CODE() {
		if (_IFSC_CODE == null) {
			return StringPool.BLANK;
		}
		else {
			return _IFSC_CODE;
		}
	}

	public void setIFSC_CODE(String IFSC_CODE) {
		_IFSC_CODE = IFSC_CODE;
	}

	@JSON
	public String getSTD_CODE() {
		if (_STD_CODE == null) {
			return StringPool.BLANK;
		}
		else {
			return _STD_CODE;
		}
	}

	public void setSTD_CODE(String STD_CODE) {
		_STD_CODE = STD_CODE;
	}

	@JSON
	public String getTELEPHONE() {
		if (_TELEPHONE == null) {
			return StringPool.BLANK;
		}
		else {
			return _TELEPHONE;
		}
	}

	public void setTELEPHONE(String TELEPHONE) {
		_TELEPHONE = TELEPHONE;
	}

	@JSON
	public String getFAX_NO() {
		if (_FAX_NO == null) {
			return StringPool.BLANK;
		}
		else {
			return _FAX_NO;
		}
	}

	public void setFAX_NO(String FAX_NO) {
		_FAX_NO = FAX_NO;
	}

	@JSON
	public String getEMAIL_ID() {
		if (_EMAIL_ID == null) {
			return StringPool.BLANK;
		}
		else {
			return _EMAIL_ID;
		}
	}

	public void setEMAIL_ID(String EMAIL_ID) {
		_EMAIL_ID = EMAIL_ID;
	}

	@JSON
	public String getBUSSINESS_HOURS() {
		if (_BUSSINESS_HOURS == null) {
			return StringPool.BLANK;
		}
		else {
			return _BUSSINESS_HOURS;
		}
	}

	public void setBUSSINESS_HOURS(String BUSSINESS_HOURS) {
		_BUSSINESS_HOURS = BUSSINESS_HOURS;
	}

	@JSON
	public String getWEEKLY_HOLIDAY() {
		if (_WEEKLY_HOLIDAY == null) {
			return StringPool.BLANK;
		}
		else {
			return _WEEKLY_HOLIDAY;
		}
	}

	public void setWEEKLY_HOLIDAY(String WEEKLY_HOLIDAY) {
		_WEEKLY_HOLIDAY = WEEKLY_HOLIDAY;
	}

	@JSON
	public String getNON_BANKING_DAY() {
		if (_NON_BANKING_DAY == null) {
			return StringPool.BLANK;
		}
		else {
			return _NON_BANKING_DAY;
		}
	}

	public void setNON_BANKING_DAY(String NON_BANKING_DAY) {
		_NON_BANKING_DAY = NON_BANKING_DAY;
	}

	@JSON
	public String getSUNDAY_BANKING() {
		if (_SUNDAY_BANKING == null) {
			return StringPool.BLANK;
		}
		else {
			return _SUNDAY_BANKING;
		}
	}

	public void setSUNDAY_BANKING(String SUNDAY_BANKING) {
		_SUNDAY_BANKING = SUNDAY_BANKING;
	}

	@JSON
	public String getSUNDAY_BANKING_BUSSINESS() {
		if (_SUNDAY_BANKING_BUSSINESS == null) {
			return StringPool.BLANK;
		}
		else {
			return _SUNDAY_BANKING_BUSSINESS;
		}
	}

	public void setSUNDAY_BANKING_BUSSINESS(String SUNDAY_BANKING_BUSSINESS) {
		_SUNDAY_BANKING_BUSSINESS = SUNDAY_BANKING_BUSSINESS;
	}

	@JSON
	public String getSWIFT_ENABLED() {
		if (_SWIFT_ENABLED == null) {
			return StringPool.BLANK;
		}
		else {
			return _SWIFT_ENABLED;
		}
	}

	public void setSWIFT_ENABLED(String SWIFT_ENABLED) {
		_SWIFT_ENABLED = SWIFT_ENABLED;
	}

	@JSON
	public String getSWIFT_CODE() {
		if (_SWIFT_CODE == null) {
			return StringPool.BLANK;
		}
		else {
			return _SWIFT_CODE;
		}
	}

	public void setSWIFT_CODE(String SWIFT_CODE) {
		_SWIFT_CODE = SWIFT_CODE;
	}

	@JSON
	public String getBRANCH_TYPE() {
		if (_BRANCH_TYPE == null) {
			return StringPool.BLANK;
		}
		else {
			return _BRANCH_TYPE;
		}
	}

	public void setBRANCH_TYPE(String BRANCH_TYPE) {
		_BRANCH_TYPE = BRANCH_TYPE;
	}

	@JSON
	public String getLOCKER() {
		if (_LOCKER == null) {
			return StringPool.BLANK;
		}
		else {
			return _LOCKER;
		}
	}

	public void setLOCKER(String LOCKER) {
		_LOCKER = LOCKER;
	}

	@JSON
	public String getGOLD_COIN() {
		if (_GOLD_COIN == null) {
			return StringPool.BLANK;
		}
		else {
			return _GOLD_COIN;
		}
	}

	public void setGOLD_COIN(String GOLD_COIN) {
		_GOLD_COIN = GOLD_COIN;
	}

	@JSON
	public Date getLAST_MOD_TIME() {
		return _LAST_MOD_TIME;
	}

	public void setLAST_MOD_TIME(Date LAST_MOD_TIME) {
		_LAST_MOD_TIME = LAST_MOD_TIME;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			WMS_INB_BRANCH_MASTER.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public WMS_INB_BRANCH_MASTER toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (WMS_INB_BRANCH_MASTER)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	public WMS_INB_BRANCH_MASTER toUnescapedModel() {
		return (WMS_INB_BRANCH_MASTER)this;
	}

	@Override
	public Object clone() {
		WMS_INB_BRANCH_MASTERImpl wms_inb_branch_masterImpl = new WMS_INB_BRANCH_MASTERImpl();

		wms_inb_branch_masterImpl.setREC_ID(getREC_ID());
		wms_inb_branch_masterImpl.setBRANCH_CODE(getBRANCH_CODE());
		wms_inb_branch_masterImpl.setBRANCH_NAME(getBRANCH_NAME());
		wms_inb_branch_masterImpl.setMAIL_ADDRESS1(getMAIL_ADDRESS1());
		wms_inb_branch_masterImpl.setMAIL_ADDRESS2(getMAIL_ADDRESS2());
		wms_inb_branch_masterImpl.setMAIL_ADDRESS3(getMAIL_ADDRESS3());
		wms_inb_branch_masterImpl.setCITY(getCITY());
		wms_inb_branch_masterImpl.setDISTRICT(getDISTRICT());
		wms_inb_branch_masterImpl.setSTATE(getSTATE());
		wms_inb_branch_masterImpl.setPIN(getPIN());
		wms_inb_branch_masterImpl.setCIRCLE(getCIRCLE());
		wms_inb_branch_masterImpl.setFOREX_TYPE(getFOREX_TYPE());
		wms_inb_branch_masterImpl.setBRANCH_MANAGER(getBRANCH_MANAGER());
		wms_inb_branch_masterImpl.setNO_OF_ATM(getNO_OF_ATM());
		wms_inb_branch_masterImpl.setIFSC_CODE(getIFSC_CODE());
		wms_inb_branch_masterImpl.setSTD_CODE(getSTD_CODE());
		wms_inb_branch_masterImpl.setTELEPHONE(getTELEPHONE());
		wms_inb_branch_masterImpl.setFAX_NO(getFAX_NO());
		wms_inb_branch_masterImpl.setEMAIL_ID(getEMAIL_ID());
		wms_inb_branch_masterImpl.setBUSSINESS_HOURS(getBUSSINESS_HOURS());
		wms_inb_branch_masterImpl.setWEEKLY_HOLIDAY(getWEEKLY_HOLIDAY());
		wms_inb_branch_masterImpl.setNON_BANKING_DAY(getNON_BANKING_DAY());
		wms_inb_branch_masterImpl.setSUNDAY_BANKING(getSUNDAY_BANKING());
		wms_inb_branch_masterImpl.setSUNDAY_BANKING_BUSSINESS(getSUNDAY_BANKING_BUSSINESS());
		wms_inb_branch_masterImpl.setSWIFT_ENABLED(getSWIFT_ENABLED());
		wms_inb_branch_masterImpl.setSWIFT_CODE(getSWIFT_CODE());
		wms_inb_branch_masterImpl.setBRANCH_TYPE(getBRANCH_TYPE());
		wms_inb_branch_masterImpl.setLOCKER(getLOCKER());
		wms_inb_branch_masterImpl.setGOLD_COIN(getGOLD_COIN());
		wms_inb_branch_masterImpl.setLAST_MOD_TIME(getLAST_MOD_TIME());

		wms_inb_branch_masterImpl.resetOriginalValues();

		return wms_inb_branch_masterImpl;
	}

	public int compareTo(WMS_INB_BRANCH_MASTER wms_inb_branch_master) {
		int value = 0;

		if (getREC_ID() < wms_inb_branch_master.getREC_ID()) {
			value = -1;
		}
		else if (getREC_ID() > wms_inb_branch_master.getREC_ID()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof WMS_INB_BRANCH_MASTER)) {
			return false;
		}

		WMS_INB_BRANCH_MASTER wms_inb_branch_master = (WMS_INB_BRANCH_MASTER)obj;

		long primaryKey = wms_inb_branch_master.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<WMS_INB_BRANCH_MASTER> toCacheModel() {
		WMS_INB_BRANCH_MASTERCacheModel wms_inb_branch_masterCacheModel = new WMS_INB_BRANCH_MASTERCacheModel();

		wms_inb_branch_masterCacheModel.REC_ID = getREC_ID();

		wms_inb_branch_masterCacheModel.BRANCH_CODE = getBRANCH_CODE();

		String BRANCH_CODE = wms_inb_branch_masterCacheModel.BRANCH_CODE;

		if ((BRANCH_CODE != null) && (BRANCH_CODE.length() == 0)) {
			wms_inb_branch_masterCacheModel.BRANCH_CODE = null;
		}

		wms_inb_branch_masterCacheModel.BRANCH_NAME = getBRANCH_NAME();

		String BRANCH_NAME = wms_inb_branch_masterCacheModel.BRANCH_NAME;

		if ((BRANCH_NAME != null) && (BRANCH_NAME.length() == 0)) {
			wms_inb_branch_masterCacheModel.BRANCH_NAME = null;
		}

		wms_inb_branch_masterCacheModel.MAIL_ADDRESS1 = getMAIL_ADDRESS1();

		String MAIL_ADDRESS1 = wms_inb_branch_masterCacheModel.MAIL_ADDRESS1;

		if ((MAIL_ADDRESS1 != null) && (MAIL_ADDRESS1.length() == 0)) {
			wms_inb_branch_masterCacheModel.MAIL_ADDRESS1 = null;
		}

		wms_inb_branch_masterCacheModel.MAIL_ADDRESS2 = getMAIL_ADDRESS2();

		String MAIL_ADDRESS2 = wms_inb_branch_masterCacheModel.MAIL_ADDRESS2;

		if ((MAIL_ADDRESS2 != null) && (MAIL_ADDRESS2.length() == 0)) {
			wms_inb_branch_masterCacheModel.MAIL_ADDRESS2 = null;
		}

		wms_inb_branch_masterCacheModel.MAIL_ADDRESS3 = getMAIL_ADDRESS3();

		String MAIL_ADDRESS3 = wms_inb_branch_masterCacheModel.MAIL_ADDRESS3;

		if ((MAIL_ADDRESS3 != null) && (MAIL_ADDRESS3.length() == 0)) {
			wms_inb_branch_masterCacheModel.MAIL_ADDRESS3 = null;
		}

		wms_inb_branch_masterCacheModel.CITY = getCITY();

		String CITY = wms_inb_branch_masterCacheModel.CITY;

		if ((CITY != null) && (CITY.length() == 0)) {
			wms_inb_branch_masterCacheModel.CITY = null;
		}

		wms_inb_branch_masterCacheModel.DISTRICT = getDISTRICT();

		String DISTRICT = wms_inb_branch_masterCacheModel.DISTRICT;

		if ((DISTRICT != null) && (DISTRICT.length() == 0)) {
			wms_inb_branch_masterCacheModel.DISTRICT = null;
		}

		wms_inb_branch_masterCacheModel.STATE = getSTATE();

		String STATE = wms_inb_branch_masterCacheModel.STATE;

		if ((STATE != null) && (STATE.length() == 0)) {
			wms_inb_branch_masterCacheModel.STATE = null;
		}

		wms_inb_branch_masterCacheModel.PIN = getPIN();

		String PIN = wms_inb_branch_masterCacheModel.PIN;

		if ((PIN != null) && (PIN.length() == 0)) {
			wms_inb_branch_masterCacheModel.PIN = null;
		}

		wms_inb_branch_masterCacheModel.CIRCLE = getCIRCLE();

		String CIRCLE = wms_inb_branch_masterCacheModel.CIRCLE;

		if ((CIRCLE != null) && (CIRCLE.length() == 0)) {
			wms_inb_branch_masterCacheModel.CIRCLE = null;
		}

		wms_inb_branch_masterCacheModel.FOREX_TYPE = getFOREX_TYPE();

		String FOREX_TYPE = wms_inb_branch_masterCacheModel.FOREX_TYPE;

		if ((FOREX_TYPE != null) && (FOREX_TYPE.length() == 0)) {
			wms_inb_branch_masterCacheModel.FOREX_TYPE = null;
		}

		wms_inb_branch_masterCacheModel.BRANCH_MANAGER = getBRANCH_MANAGER();

		String BRANCH_MANAGER = wms_inb_branch_masterCacheModel.BRANCH_MANAGER;

		if ((BRANCH_MANAGER != null) && (BRANCH_MANAGER.length() == 0)) {
			wms_inb_branch_masterCacheModel.BRANCH_MANAGER = null;
		}

		wms_inb_branch_masterCacheModel.NO_OF_ATM = getNO_OF_ATM();

		String NO_OF_ATM = wms_inb_branch_masterCacheModel.NO_OF_ATM;

		if ((NO_OF_ATM != null) && (NO_OF_ATM.length() == 0)) {
			wms_inb_branch_masterCacheModel.NO_OF_ATM = null;
		}

		wms_inb_branch_masterCacheModel.IFSC_CODE = getIFSC_CODE();

		String IFSC_CODE = wms_inb_branch_masterCacheModel.IFSC_CODE;

		if ((IFSC_CODE != null) && (IFSC_CODE.length() == 0)) {
			wms_inb_branch_masterCacheModel.IFSC_CODE = null;
		}

		wms_inb_branch_masterCacheModel.STD_CODE = getSTD_CODE();

		String STD_CODE = wms_inb_branch_masterCacheModel.STD_CODE;

		if ((STD_CODE != null) && (STD_CODE.length() == 0)) {
			wms_inb_branch_masterCacheModel.STD_CODE = null;
		}

		wms_inb_branch_masterCacheModel.TELEPHONE = getTELEPHONE();

		String TELEPHONE = wms_inb_branch_masterCacheModel.TELEPHONE;

		if ((TELEPHONE != null) && (TELEPHONE.length() == 0)) {
			wms_inb_branch_masterCacheModel.TELEPHONE = null;
		}

		wms_inb_branch_masterCacheModel.FAX_NO = getFAX_NO();

		String FAX_NO = wms_inb_branch_masterCacheModel.FAX_NO;

		if ((FAX_NO != null) && (FAX_NO.length() == 0)) {
			wms_inb_branch_masterCacheModel.FAX_NO = null;
		}

		wms_inb_branch_masterCacheModel.EMAIL_ID = getEMAIL_ID();

		String EMAIL_ID = wms_inb_branch_masterCacheModel.EMAIL_ID;

		if ((EMAIL_ID != null) && (EMAIL_ID.length() == 0)) {
			wms_inb_branch_masterCacheModel.EMAIL_ID = null;
		}

		wms_inb_branch_masterCacheModel.BUSSINESS_HOURS = getBUSSINESS_HOURS();

		String BUSSINESS_HOURS = wms_inb_branch_masterCacheModel.BUSSINESS_HOURS;

		if ((BUSSINESS_HOURS != null) && (BUSSINESS_HOURS.length() == 0)) {
			wms_inb_branch_masterCacheModel.BUSSINESS_HOURS = null;
		}

		wms_inb_branch_masterCacheModel.WEEKLY_HOLIDAY = getWEEKLY_HOLIDAY();

		String WEEKLY_HOLIDAY = wms_inb_branch_masterCacheModel.WEEKLY_HOLIDAY;

		if ((WEEKLY_HOLIDAY != null) && (WEEKLY_HOLIDAY.length() == 0)) {
			wms_inb_branch_masterCacheModel.WEEKLY_HOLIDAY = null;
		}

		wms_inb_branch_masterCacheModel.NON_BANKING_DAY = getNON_BANKING_DAY();

		String NON_BANKING_DAY = wms_inb_branch_masterCacheModel.NON_BANKING_DAY;

		if ((NON_BANKING_DAY != null) && (NON_BANKING_DAY.length() == 0)) {
			wms_inb_branch_masterCacheModel.NON_BANKING_DAY = null;
		}

		wms_inb_branch_masterCacheModel.SUNDAY_BANKING = getSUNDAY_BANKING();

		String SUNDAY_BANKING = wms_inb_branch_masterCacheModel.SUNDAY_BANKING;

		if ((SUNDAY_BANKING != null) && (SUNDAY_BANKING.length() == 0)) {
			wms_inb_branch_masterCacheModel.SUNDAY_BANKING = null;
		}

		wms_inb_branch_masterCacheModel.SUNDAY_BANKING_BUSSINESS = getSUNDAY_BANKING_BUSSINESS();

		String SUNDAY_BANKING_BUSSINESS = wms_inb_branch_masterCacheModel.SUNDAY_BANKING_BUSSINESS;

		if ((SUNDAY_BANKING_BUSSINESS != null) &&
				(SUNDAY_BANKING_BUSSINESS.length() == 0)) {
			wms_inb_branch_masterCacheModel.SUNDAY_BANKING_BUSSINESS = null;
		}

		wms_inb_branch_masterCacheModel.SWIFT_ENABLED = getSWIFT_ENABLED();

		String SWIFT_ENABLED = wms_inb_branch_masterCacheModel.SWIFT_ENABLED;

		if ((SWIFT_ENABLED != null) && (SWIFT_ENABLED.length() == 0)) {
			wms_inb_branch_masterCacheModel.SWIFT_ENABLED = null;
		}

		wms_inb_branch_masterCacheModel.SWIFT_CODE = getSWIFT_CODE();

		String SWIFT_CODE = wms_inb_branch_masterCacheModel.SWIFT_CODE;

		if ((SWIFT_CODE != null) && (SWIFT_CODE.length() == 0)) {
			wms_inb_branch_masterCacheModel.SWIFT_CODE = null;
		}

		wms_inb_branch_masterCacheModel.BRANCH_TYPE = getBRANCH_TYPE();

		String BRANCH_TYPE = wms_inb_branch_masterCacheModel.BRANCH_TYPE;

		if ((BRANCH_TYPE != null) && (BRANCH_TYPE.length() == 0)) {
			wms_inb_branch_masterCacheModel.BRANCH_TYPE = null;
		}

		wms_inb_branch_masterCacheModel.LOCKER = getLOCKER();

		String LOCKER = wms_inb_branch_masterCacheModel.LOCKER;

		if ((LOCKER != null) && (LOCKER.length() == 0)) {
			wms_inb_branch_masterCacheModel.LOCKER = null;
		}

		wms_inb_branch_masterCacheModel.GOLD_COIN = getGOLD_COIN();

		String GOLD_COIN = wms_inb_branch_masterCacheModel.GOLD_COIN;

		if ((GOLD_COIN != null) && (GOLD_COIN.length() == 0)) {
			wms_inb_branch_masterCacheModel.GOLD_COIN = null;
		}

		Date LAST_MOD_TIME = getLAST_MOD_TIME();

		if (LAST_MOD_TIME != null) {
			wms_inb_branch_masterCacheModel.LAST_MOD_TIME = LAST_MOD_TIME.getTime();
		}
		else {
			wms_inb_branch_masterCacheModel.LAST_MOD_TIME = Long.MIN_VALUE;
		}

		return wms_inb_branch_masterCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(61);

		sb.append("{REC_ID=");
		sb.append(getREC_ID());
		sb.append(", BRANCH_CODE=");
		sb.append(getBRANCH_CODE());
		sb.append(", BRANCH_NAME=");
		sb.append(getBRANCH_NAME());
		sb.append(", MAIL_ADDRESS1=");
		sb.append(getMAIL_ADDRESS1());
		sb.append(", MAIL_ADDRESS2=");
		sb.append(getMAIL_ADDRESS2());
		sb.append(", MAIL_ADDRESS3=");
		sb.append(getMAIL_ADDRESS3());
		sb.append(", CITY=");
		sb.append(getCITY());
		sb.append(", DISTRICT=");
		sb.append(getDISTRICT());
		sb.append(", STATE=");
		sb.append(getSTATE());
		sb.append(", PIN=");
		sb.append(getPIN());
		sb.append(", CIRCLE=");
		sb.append(getCIRCLE());
		sb.append(", FOREX_TYPE=");
		sb.append(getFOREX_TYPE());
		sb.append(", BRANCH_MANAGER=");
		sb.append(getBRANCH_MANAGER());
		sb.append(", NO_OF_ATM=");
		sb.append(getNO_OF_ATM());
		sb.append(", IFSC_CODE=");
		sb.append(getIFSC_CODE());
		sb.append(", STD_CODE=");
		sb.append(getSTD_CODE());
		sb.append(", TELEPHONE=");
		sb.append(getTELEPHONE());
		sb.append(", FAX_NO=");
		sb.append(getFAX_NO());
		sb.append(", EMAIL_ID=");
		sb.append(getEMAIL_ID());
		sb.append(", BUSSINESS_HOURS=");
		sb.append(getBUSSINESS_HOURS());
		sb.append(", WEEKLY_HOLIDAY=");
		sb.append(getWEEKLY_HOLIDAY());
		sb.append(", NON_BANKING_DAY=");
		sb.append(getNON_BANKING_DAY());
		sb.append(", SUNDAY_BANKING=");
		sb.append(getSUNDAY_BANKING());
		sb.append(", SUNDAY_BANKING_BUSSINESS=");
		sb.append(getSUNDAY_BANKING_BUSSINESS());
		sb.append(", SWIFT_ENABLED=");
		sb.append(getSWIFT_ENABLED());
		sb.append(", SWIFT_CODE=");
		sb.append(getSWIFT_CODE());
		sb.append(", BRANCH_TYPE=");
		sb.append(getBRANCH_TYPE());
		sb.append(", LOCKER=");
		sb.append(getLOCKER());
		sb.append(", GOLD_COIN=");
		sb.append(getGOLD_COIN());
		sb.append(", LAST_MOD_TIME=");
		sb.append(getLAST_MOD_TIME());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(94);

		sb.append("<model><model-name>");
		sb.append("com.sbi.wms.model.WMS_INB_BRANCH_MASTER");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>REC_ID</column-name><column-value><![CDATA[");
		sb.append(getREC_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>BRANCH_CODE</column-name><column-value><![CDATA[");
		sb.append(getBRANCH_CODE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>BRANCH_NAME</column-name><column-value><![CDATA[");
		sb.append(getBRANCH_NAME());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MAIL_ADDRESS1</column-name><column-value><![CDATA[");
		sb.append(getMAIL_ADDRESS1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MAIL_ADDRESS2</column-name><column-value><![CDATA[");
		sb.append(getMAIL_ADDRESS2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MAIL_ADDRESS3</column-name><column-value><![CDATA[");
		sb.append(getMAIL_ADDRESS3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CITY</column-name><column-value><![CDATA[");
		sb.append(getCITY());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>DISTRICT</column-name><column-value><![CDATA[");
		sb.append(getDISTRICT());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>STATE</column-name><column-value><![CDATA[");
		sb.append(getSTATE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PIN</column-name><column-value><![CDATA[");
		sb.append(getPIN());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CIRCLE</column-name><column-value><![CDATA[");
		sb.append(getCIRCLE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>FOREX_TYPE</column-name><column-value><![CDATA[");
		sb.append(getFOREX_TYPE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>BRANCH_MANAGER</column-name><column-value><![CDATA[");
		sb.append(getBRANCH_MANAGER());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>NO_OF_ATM</column-name><column-value><![CDATA[");
		sb.append(getNO_OF_ATM());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>IFSC_CODE</column-name><column-value><![CDATA[");
		sb.append(getIFSC_CODE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>STD_CODE</column-name><column-value><![CDATA[");
		sb.append(getSTD_CODE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>TELEPHONE</column-name><column-value><![CDATA[");
		sb.append(getTELEPHONE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>FAX_NO</column-name><column-value><![CDATA[");
		sb.append(getFAX_NO());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>EMAIL_ID</column-name><column-value><![CDATA[");
		sb.append(getEMAIL_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>BUSSINESS_HOURS</column-name><column-value><![CDATA[");
		sb.append(getBUSSINESS_HOURS());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>WEEKLY_HOLIDAY</column-name><column-value><![CDATA[");
		sb.append(getWEEKLY_HOLIDAY());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>NON_BANKING_DAY</column-name><column-value><![CDATA[");
		sb.append(getNON_BANKING_DAY());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SUNDAY_BANKING</column-name><column-value><![CDATA[");
		sb.append(getSUNDAY_BANKING());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SUNDAY_BANKING_BUSSINESS</column-name><column-value><![CDATA[");
		sb.append(getSUNDAY_BANKING_BUSSINESS());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SWIFT_ENABLED</column-name><column-value><![CDATA[");
		sb.append(getSWIFT_ENABLED());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SWIFT_CODE</column-name><column-value><![CDATA[");
		sb.append(getSWIFT_CODE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>BRANCH_TYPE</column-name><column-value><![CDATA[");
		sb.append(getBRANCH_TYPE());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>LOCKER</column-name><column-value><![CDATA[");
		sb.append(getLOCKER());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>GOLD_COIN</column-name><column-value><![CDATA[");
		sb.append(getGOLD_COIN());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>LAST_MOD_TIME</column-name><column-value><![CDATA[");
		sb.append(getLAST_MOD_TIME());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = WMS_INB_BRANCH_MASTER.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			WMS_INB_BRANCH_MASTER.class
		};
	private long _REC_ID;
	private String _BRANCH_CODE;
	private String _BRANCH_NAME;
	private String _MAIL_ADDRESS1;
	private String _MAIL_ADDRESS2;
	private String _MAIL_ADDRESS3;
	private String _CITY;
	private String _DISTRICT;
	private String _STATE;
	private String _PIN;
	private String _CIRCLE;
	private String _FOREX_TYPE;
	private String _BRANCH_MANAGER;
	private String _NO_OF_ATM;
	private String _IFSC_CODE;
	private String _STD_CODE;
	private String _TELEPHONE;
	private String _FAX_NO;
	private String _EMAIL_ID;
	private String _BUSSINESS_HOURS;
	private String _WEEKLY_HOLIDAY;
	private String _NON_BANKING_DAY;
	private String _SUNDAY_BANKING;
	private String _SUNDAY_BANKING_BUSSINESS;
	private String _SWIFT_ENABLED;
	private String _SWIFT_CODE;
	private String _BRANCH_TYPE;
	private String _LOCKER;
	private String _GOLD_COIN;
	private Date _LAST_MOD_TIME;
	private WMS_INB_BRANCH_MASTER _escapedModel;
}