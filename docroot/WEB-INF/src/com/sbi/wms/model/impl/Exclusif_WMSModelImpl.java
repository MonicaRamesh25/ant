/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sbi.wms.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sbi.wms.model.Exclusif_WMS;
import com.sbi.wms.model.Exclusif_WMSModel;
import com.sbi.wms.model.Exclusif_WMSSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Exclusif_WMS service. Represents a row in the &quot;SBI_Exclusif_WMS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sbi.wms.model.Exclusif_WMSModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link Exclusif_WMSImpl}.
 * </p>
 *
 * @author Syed
 * @see Exclusif_WMSImpl
 * @see com.sbi.wms.model.Exclusif_WMS
 * @see com.sbi.wms.model.Exclusif_WMSModel
 * @generated
 */
@JSON(strict = true)
public class Exclusif_WMSModelImpl extends BaseModelImpl<Exclusif_WMS>
	implements Exclusif_WMSModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a exclusif_ w m s model instance should use the {@link com.sbi.wms.model.Exclusif_WMS} interface instead.
	 */
	public static final String TABLE_NAME = "SBI_Exclusif_WMS";
	public static final Object[][] TABLE_COLUMNS = {
			{ "recId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "city", Types.VARCHAR },
			{ "mobileno", Types.BIGINT },
			{ "email", Types.VARCHAR },
			{ "agree", Types.VARCHAR },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table SBI_Exclusif_WMS (recId LONG not null primary key,name VARCHAR(75) null,city VARCHAR(75) null,mobileno LONG,email VARCHAR(75) null,agree VARCHAR(75) null,companyId LONG,groupId LONG,userId LONG,createDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table SBI_Exclusif_WMS";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sbi.wms.model.Exclusif_WMS"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sbi.wms.model.Exclusif_WMS"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Exclusif_WMS toModel(Exclusif_WMSSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Exclusif_WMS model = new Exclusif_WMSImpl();

		model.setRecId(soapModel.getRecId());
		model.setName(soapModel.getName());
		model.setCity(soapModel.getCity());
		model.setMobileno(soapModel.getMobileno());
		model.setEmail(soapModel.getEmail());
		model.setAgree(soapModel.getAgree());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setCreateDate(soapModel.getCreateDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Exclusif_WMS> toModels(Exclusif_WMSSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Exclusif_WMS> models = new ArrayList<Exclusif_WMS>(soapModels.length);

		for (Exclusif_WMSSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sbi.wms.model.Exclusif_WMS"));

	public Exclusif_WMSModelImpl() {
	}

	public long getPrimaryKey() {
		return _recId;
	}

	public void setPrimaryKey(long primaryKey) {
		setRecId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_recId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return Exclusif_WMS.class;
	}

	public String getModelClassName() {
		return Exclusif_WMS.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("recId", getRecId());
		attributes.put("name", getName());
		attributes.put("city", getCity());
		attributes.put("mobileno", getMobileno());
		attributes.put("email", getEmail());
		attributes.put("agree", getAgree());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long recId = (Long)attributes.get("recId");

		if (recId != null) {
			setRecId(recId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String city = (String)attributes.get("city");

		if (city != null) {
			setCity(city);
		}

		Long mobileno = (Long)attributes.get("mobileno");

		if (mobileno != null) {
			setMobileno(mobileno);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String agree = (String)attributes.get("agree");

		if (agree != null) {
			setAgree(agree);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}
	}

	@JSON
	public long getRecId() {
		return _recId;
	}

	public void setRecId(long recId) {
		_recId = recId;
	}

	@JSON
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	public void setName(String name) {
		_name = name;
	}

	@JSON
	public String getCity() {
		if (_city == null) {
			return StringPool.BLANK;
		}
		else {
			return _city;
		}
	}

	public void setCity(String city) {
		_city = city;
	}

	@JSON
	public long getMobileno() {
		return _mobileno;
	}

	public void setMobileno(long mobileno) {
		_mobileno = mobileno;
	}

	@JSON
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	public void setEmail(String email) {
		_email = email;
	}

	@JSON
	public String getAgree() {
		if (_agree == null) {
			return StringPool.BLANK;
		}
		else {
			return _agree;
		}
	}

	public void setAgree(String agree) {
		_agree = agree;
	}

	@JSON
	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Exclusif_WMS.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Exclusif_WMS toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Exclusif_WMS)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	public Exclusif_WMS toUnescapedModel() {
		return (Exclusif_WMS)this;
	}

	@Override
	public Object clone() {
		Exclusif_WMSImpl exclusif_WMSImpl = new Exclusif_WMSImpl();

		exclusif_WMSImpl.setRecId(getRecId());
		exclusif_WMSImpl.setName(getName());
		exclusif_WMSImpl.setCity(getCity());
		exclusif_WMSImpl.setMobileno(getMobileno());
		exclusif_WMSImpl.setEmail(getEmail());
		exclusif_WMSImpl.setAgree(getAgree());
		exclusif_WMSImpl.setCompanyId(getCompanyId());
		exclusif_WMSImpl.setGroupId(getGroupId());
		exclusif_WMSImpl.setUserId(getUserId());
		exclusif_WMSImpl.setCreateDate(getCreateDate());

		exclusif_WMSImpl.resetOriginalValues();

		return exclusif_WMSImpl;
	}

	public int compareTo(Exclusif_WMS exclusif_WMS) {
		long primaryKey = exclusif_WMS.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Exclusif_WMS)) {
			return false;
		}

		Exclusif_WMS exclusif_WMS = (Exclusif_WMS)obj;

		long primaryKey = exclusif_WMS.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Exclusif_WMS> toCacheModel() {
		Exclusif_WMSCacheModel exclusif_WMSCacheModel = new Exclusif_WMSCacheModel();

		exclusif_WMSCacheModel.recId = getRecId();

		exclusif_WMSCacheModel.name = getName();

		String name = exclusif_WMSCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			exclusif_WMSCacheModel.name = null;
		}

		exclusif_WMSCacheModel.city = getCity();

		String city = exclusif_WMSCacheModel.city;

		if ((city != null) && (city.length() == 0)) {
			exclusif_WMSCacheModel.city = null;
		}

		exclusif_WMSCacheModel.mobileno = getMobileno();

		exclusif_WMSCacheModel.email = getEmail();

		String email = exclusif_WMSCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			exclusif_WMSCacheModel.email = null;
		}

		exclusif_WMSCacheModel.agree = getAgree();

		String agree = exclusif_WMSCacheModel.agree;

		if ((agree != null) && (agree.length() == 0)) {
			exclusif_WMSCacheModel.agree = null;
		}

		exclusif_WMSCacheModel.companyId = getCompanyId();

		exclusif_WMSCacheModel.groupId = getGroupId();

		exclusif_WMSCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			exclusif_WMSCacheModel.createDate = createDate.getTime();
		}
		else {
			exclusif_WMSCacheModel.createDate = Long.MIN_VALUE;
		}

		return exclusif_WMSCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{recId=");
		sb.append(getRecId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", city=");
		sb.append(getCity());
		sb.append(", mobileno=");
		sb.append(getMobileno());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", agree=");
		sb.append(getAgree());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.sbi.wms.model.Exclusif_WMS");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>recId</column-name><column-value><![CDATA[");
		sb.append(getRecId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>city</column-name><column-value><![CDATA[");
		sb.append(getCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mobileno</column-name><column-value><![CDATA[");
		sb.append(getMobileno());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>agree</column-name><column-value><![CDATA[");
		sb.append(getAgree());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Exclusif_WMS.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Exclusif_WMS.class
		};
	private long _recId;
	private String _name;
	private String _city;
	private long _mobileno;
	private String _email;
	private String _agree;
	private long _companyId;
	private long _groupId;
	private long _userId;
	private String _userUuid;
	private Date _createDate;
	private Exclusif_WMS _escapedModel;
}