/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sbi.wms.service.base;

import com.liferay.counter.service.CounterLocalService;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.ResourceLocalService;
import com.liferay.portal.service.ResourceService;
import com.liferay.portal.service.UserLocalService;
import com.liferay.portal.service.UserService;
import com.liferay.portal.service.persistence.ResourcePersistence;
import com.liferay.portal.service.persistence.UserPersistence;

import com.sbi.wms.model.Exclusif_WMS;
import com.sbi.wms.service.Exclusif_WMSLocalService;
import com.sbi.wms.service.Exclusif_WMSService;
import com.sbi.wms.service.WMS_INB_BRANCH_MASTERLocalService;
import com.sbi.wms.service.WMS_INB_BRANCH_MASTERService;
import com.sbi.wms.service.persistence.Exclusif_WMSPersistence;
import com.sbi.wms.service.persistence.WMS_INB_BRANCH_MASTERPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * The base implementation of the exclusif_ w m s local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.sbi.wms.service.impl.Exclusif_WMSLocalServiceImpl}.
 * </p>
 *
 * @author Syed
 * @see com.sbi.wms.service.impl.Exclusif_WMSLocalServiceImpl
 * @see com.sbi.wms.service.Exclusif_WMSLocalServiceUtil
 * @generated
 */
public abstract class Exclusif_WMSLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements Exclusif_WMSLocalService,
		IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.sbi.wms.service.Exclusif_WMSLocalServiceUtil} to access the exclusif_ w m s local service.
	 */

	/**
	 * Adds the exclusif_ w m s to the database. Also notifies the appropriate model listeners.
	 *
	 * @param exclusif_WMS the exclusif_ w m s
	 * @return the exclusif_ w m s that was added
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	public Exclusif_WMS addExclusif_WMS(Exclusif_WMS exclusif_WMS)
		throws SystemException {
		exclusif_WMS.setNew(true);

		return exclusif_WMSPersistence.update(exclusif_WMS, false);
	}

	/**
	 * Creates a new exclusif_ w m s with the primary key. Does not add the exclusif_ w m s to the database.
	 *
	 * @param recId the primary key for the new exclusif_ w m s
	 * @return the new exclusif_ w m s
	 */
	public Exclusif_WMS createExclusif_WMS(long recId) {
		return exclusif_WMSPersistence.create(recId);
	}

	/**
	 * Deletes the exclusif_ w m s with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param recId the primary key of the exclusif_ w m s
	 * @return the exclusif_ w m s that was removed
	 * @throws PortalException if a exclusif_ w m s with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	public Exclusif_WMS deleteExclusif_WMS(long recId)
		throws PortalException, SystemException {
		return exclusif_WMSPersistence.remove(recId);
	}

	/**
	 * Deletes the exclusif_ w m s from the database. Also notifies the appropriate model listeners.
	 *
	 * @param exclusif_WMS the exclusif_ w m s
	 * @return the exclusif_ w m s that was removed
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	public Exclusif_WMS deleteExclusif_WMS(Exclusif_WMS exclusif_WMS)
		throws SystemException {
		return exclusif_WMSPersistence.remove(exclusif_WMS);
	}

	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(Exclusif_WMS.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return exclusif_WMSPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return exclusif_WMSPersistence.findWithDynamicQuery(dynamicQuery,
			start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return exclusif_WMSPersistence.findWithDynamicQuery(dynamicQuery,
			start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return exclusif_WMSPersistence.countWithDynamicQuery(dynamicQuery);
	}

	public Exclusif_WMS fetchExclusif_WMS(long recId) throws SystemException {
		return exclusif_WMSPersistence.fetchByPrimaryKey(recId);
	}

	/**
	 * Returns the exclusif_ w m s with the primary key.
	 *
	 * @param recId the primary key of the exclusif_ w m s
	 * @return the exclusif_ w m s
	 * @throws PortalException if a exclusif_ w m s with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	public Exclusif_WMS getExclusif_WMS(long recId)
		throws PortalException, SystemException {
		return exclusif_WMSPersistence.findByPrimaryKey(recId);
	}

	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return exclusif_WMSPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the exclusif_ w m ses.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set.
	 * </p>
	 *
	 * @param start the lower bound of the range of exclusif_ w m ses
	 * @param end the upper bound of the range of exclusif_ w m ses (not inclusive)
	 * @return the range of exclusif_ w m ses
	 * @throws SystemException if a system exception occurred
	 */
	public List<Exclusif_WMS> getExclusif_WMSs(int start, int end)
		throws SystemException {
		return exclusif_WMSPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of exclusif_ w m ses.
	 *
	 * @return the number of exclusif_ w m ses
	 * @throws SystemException if a system exception occurred
	 */
	public int getExclusif_WMSsCount() throws SystemException {
		return exclusif_WMSPersistence.countAll();
	}

	/**
	 * Updates the exclusif_ w m s in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param exclusif_WMS the exclusif_ w m s
	 * @return the exclusif_ w m s that was updated
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	public Exclusif_WMS updateExclusif_WMS(Exclusif_WMS exclusif_WMS)
		throws SystemException {
		return updateExclusif_WMS(exclusif_WMS, true);
	}

	/**
	 * Updates the exclusif_ w m s in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param exclusif_WMS the exclusif_ w m s
	 * @param merge whether to merge the exclusif_ w m s with the current session. See {@link com.liferay.portal.service.persistence.BatchSession#update(com.liferay.portal.kernel.dao.orm.Session, com.liferay.portal.model.BaseModel, boolean)} for an explanation.
	 * @return the exclusif_ w m s that was updated
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	public Exclusif_WMS updateExclusif_WMS(Exclusif_WMS exclusif_WMS,
		boolean merge) throws SystemException {
		exclusif_WMS.setNew(false);

		return exclusif_WMSPersistence.update(exclusif_WMS, merge);
	}

	/**
	 * Returns the exclusif_ w m s local service.
	 *
	 * @return the exclusif_ w m s local service
	 */
	public Exclusif_WMSLocalService getExclusif_WMSLocalService() {
		return exclusif_WMSLocalService;
	}

	/**
	 * Sets the exclusif_ w m s local service.
	 *
	 * @param exclusif_WMSLocalService the exclusif_ w m s local service
	 */
	public void setExclusif_WMSLocalService(
		Exclusif_WMSLocalService exclusif_WMSLocalService) {
		this.exclusif_WMSLocalService = exclusif_WMSLocalService;
	}

	/**
	 * Returns the exclusif_ w m s remote service.
	 *
	 * @return the exclusif_ w m s remote service
	 */
	public Exclusif_WMSService getExclusif_WMSService() {
		return exclusif_WMSService;
	}

	/**
	 * Sets the exclusif_ w m s remote service.
	 *
	 * @param exclusif_WMSService the exclusif_ w m s remote service
	 */
	public void setExclusif_WMSService(Exclusif_WMSService exclusif_WMSService) {
		this.exclusif_WMSService = exclusif_WMSService;
	}

	/**
	 * Returns the exclusif_ w m s persistence.
	 *
	 * @return the exclusif_ w m s persistence
	 */
	public Exclusif_WMSPersistence getExclusif_WMSPersistence() {
		return exclusif_WMSPersistence;
	}

	/**
	 * Sets the exclusif_ w m s persistence.
	 *
	 * @param exclusif_WMSPersistence the exclusif_ w m s persistence
	 */
	public void setExclusif_WMSPersistence(
		Exclusif_WMSPersistence exclusif_WMSPersistence) {
		this.exclusif_WMSPersistence = exclusif_WMSPersistence;
	}

	/**
	 * Returns the w m s_ i n b_ b r a n c h_ m a s t e r local service.
	 *
	 * @return the w m s_ i n b_ b r a n c h_ m a s t e r local service
	 */
	public WMS_INB_BRANCH_MASTERLocalService getWMS_INB_BRANCH_MASTERLocalService() {
		return wms_inb_branch_masterLocalService;
	}

	/**
	 * Sets the w m s_ i n b_ b r a n c h_ m a s t e r local service.
	 *
	 * @param wms_inb_branch_masterLocalService the w m s_ i n b_ b r a n c h_ m a s t e r local service
	 */
	public void setWMS_INB_BRANCH_MASTERLocalService(
		WMS_INB_BRANCH_MASTERLocalService wms_inb_branch_masterLocalService) {
		this.wms_inb_branch_masterLocalService = wms_inb_branch_masterLocalService;
	}

	/**
	 * Returns the w m s_ i n b_ b r a n c h_ m a s t e r remote service.
	 *
	 * @return the w m s_ i n b_ b r a n c h_ m a s t e r remote service
	 */
	public WMS_INB_BRANCH_MASTERService getWMS_INB_BRANCH_MASTERService() {
		return wms_inb_branch_masterService;
	}

	/**
	 * Sets the w m s_ i n b_ b r a n c h_ m a s t e r remote service.
	 *
	 * @param wms_inb_branch_masterService the w m s_ i n b_ b r a n c h_ m a s t e r remote service
	 */
	public void setWMS_INB_BRANCH_MASTERService(
		WMS_INB_BRANCH_MASTERService wms_inb_branch_masterService) {
		this.wms_inb_branch_masterService = wms_inb_branch_masterService;
	}

	/**
	 * Returns the w m s_ i n b_ b r a n c h_ m a s t e r persistence.
	 *
	 * @return the w m s_ i n b_ b r a n c h_ m a s t e r persistence
	 */
	public WMS_INB_BRANCH_MASTERPersistence getWMS_INB_BRANCH_MASTERPersistence() {
		return wms_inb_branch_masterPersistence;
	}

	/**
	 * Sets the w m s_ i n b_ b r a n c h_ m a s t e r persistence.
	 *
	 * @param wms_inb_branch_masterPersistence the w m s_ i n b_ b r a n c h_ m a s t e r persistence
	 */
	public void setWMS_INB_BRANCH_MASTERPersistence(
		WMS_INB_BRANCH_MASTERPersistence wms_inb_branch_masterPersistence) {
		this.wms_inb_branch_masterPersistence = wms_inb_branch_masterPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the resource remote service.
	 *
	 * @return the resource remote service
	 */
	public ResourceService getResourceService() {
		return resourceService;
	}

	/**
	 * Sets the resource remote service.
	 *
	 * @param resourceService the resource remote service
	 */
	public void setResourceService(ResourceService resourceService) {
		this.resourceService = resourceService;
	}

	/**
	 * Returns the resource persistence.
	 *
	 * @return the resource persistence
	 */
	public ResourcePersistence getResourcePersistence() {
		return resourcePersistence;
	}

	/**
	 * Sets the resource persistence.
	 *
	 * @param resourcePersistence the resource persistence
	 */
	public void setResourcePersistence(ResourcePersistence resourcePersistence) {
		this.resourcePersistence = resourcePersistence;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();

		PersistedModelLocalServiceRegistryUtil.register("com.sbi.wms.model.Exclusif_WMS",
			exclusif_WMSLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"com.sbi.wms.model.Exclusif_WMS");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return Exclusif_WMS.class;
	}

	protected String getModelClassName() {
		return Exclusif_WMS.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = exclusif_WMSPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = Exclusif_WMSLocalService.class)
	protected Exclusif_WMSLocalService exclusif_WMSLocalService;
	@BeanReference(type = Exclusif_WMSService.class)
	protected Exclusif_WMSService exclusif_WMSService;
	@BeanReference(type = Exclusif_WMSPersistence.class)
	protected Exclusif_WMSPersistence exclusif_WMSPersistence;
	@BeanReference(type = WMS_INB_BRANCH_MASTERLocalService.class)
	protected WMS_INB_BRANCH_MASTERLocalService wms_inb_branch_masterLocalService;
	@BeanReference(type = WMS_INB_BRANCH_MASTERService.class)
	protected WMS_INB_BRANCH_MASTERService wms_inb_branch_masterService;
	@BeanReference(type = WMS_INB_BRANCH_MASTERPersistence.class)
	protected WMS_INB_BRANCH_MASTERPersistence wms_inb_branch_masterPersistence;
	@BeanReference(type = CounterLocalService.class)
	protected CounterLocalService counterLocalService;
	@BeanReference(type = ResourceLocalService.class)
	protected ResourceLocalService resourceLocalService;
	@BeanReference(type = ResourceService.class)
	protected ResourceService resourceService;
	@BeanReference(type = ResourcePersistence.class)
	protected ResourcePersistence resourcePersistence;
	@BeanReference(type = UserLocalService.class)
	protected UserLocalService userLocalService;
	@BeanReference(type = UserService.class)
	protected UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private Exclusif_WMSLocalServiceClpInvoker _clpInvoker = new Exclusif_WMSLocalServiceClpInvoker();
}